#!/bin/bash

# an empty array can be initialized with ()
# there is realy no use to this, it matches equality with non-definied vars
# and empty strings ''
array=()

# it can contain intems separated by spaces or surrounded by quotes
array=(one two)
yarra=(first 'second element' 'and   the   third')

# $varname returns the first element in an array, same with {} notation
echo "\$array: $array"
echo "\${yarra}: ${yarra}"
echo

# To return all elements use the {} notation and access [@]
echo "\${array[@]}: ${array[@]}"
echo "\${yarra[@]}: ${yarra[@]}"
echo

# Access specific elements with [#]
echo "\${array[0]}: ${array[0]}"
echo "\${yarra[1]}: ${yarra[1]}"
echo "\${yarra[2]}: ${yarra[2]}"
# Unexisting elements print nothing
echo "\${array[3]}: ${array[3]}"
echo


# To copy an array surround it in quotes and parenthesis
goodCopy=("${yarra[@]}")
baadCopy=(${yarra[@]})

# Otherwise elements with spaces in them will get messed up
echo "\${goodCopy}[1]: ${goodCopy[1]}"
echo "\${baadMaic}[1]: ${baadCopy[1]}"
echo

# Elements can be pushed into an array with += and parenthesis
arrayCopy=("${array[@]}")
echo "\${arrayCopy[@]}: ${arrayCopy[@]}"
arrayCopy+=('internationale')
echo "\${arrayCopy[@]}: ${arrayCopy[@]}"
echo "\${arrayCopy[2]}: ${arrayCopy[2]}"
echo


# Or other arrays concatenated, same rules as copying apply
# Appending one item is actually contatenating a one-element-array
goodConcat=("${array[@]}")
baadConcat=("${array[@]}")

goodConcat+=("${yarra[@]}")
baadConcat+=(${yarra[@]})

echo "\${goodConcat[@]}: ${goodConcat[@]}"
echo "\${goodConcat[3]}: ${goodConcat[3]}"
echo

echo "\${baadConcat[@]}: ${baadConcat[@]}"
echo "\${baadConcat[3]}: ${baadConcat[3]}"
echo

# Length is returned with the weirdest use of #
echo "\${#goodConcat[@]}: ${#goodConcat[@]}"
echo "\${#baadConcat[@]}: ${#baadConcat[@]}"
echo

# To do a loop provide the array with quotes
for value in "${goodConcat[@]}"; do
	echo "loop with \"\${goodConcat[@]}\": $value"
done
echo

# Otherwise values without spaces will get messed up
for value in ${goodConcat[@]}; do
	echo "loop with \${goodConcat[@]}: $value"
done
echo

