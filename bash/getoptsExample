#!/bin/bash

# Reading parameters with getopts
# This script ignores all parameters and sets its own

# TODO example with error suppresions


echo 'Using:'
echo "-a -b hello dollie"
set -- -a -b hello dollie
echo

originalParams=("$@")
optstring='ab:c:'


echo 'Initial parameters'
echo "\$@: $@"
./printParams "$@"
echo


echo "Using optstring: $optstring"
echo


echo 'getopts works by setting a number of varialbles every call'
echo 'running getopts:'
getopts $optstring option
echo "\$option: $option"
echo "\$OPTIND: $OPTIND"
echo "\$OPTARG: $OPTARG"
echo


echo 'If run again the next parameter is read'
echo 'running getopts:'
getopts $optstring option
echo "\$option: $option"
echo "\$OPTIND: $OPTIND"
echo "\$OPTARG: $OPTARG"
echo


echo 'OPTIND is used to store what parameter will be read next'
echo 'If modified it can jump or reset getopts order'
echo 'OPTIND=1'
OPTIND=1
echo 'running getopts:'
getopts $optstring option
echo "\$option: $option"
echo "\$OPTIND: $OPTIND"
echo "\$OPTARG: $OPTARG"
echo


echo 'Setting OPTERR=0 will mute errors'
echo 'But otherwise it is not that usefull'


echo 'Using:'
echo "-a -x -b 'hello dollie' -- 'molie jolie'"
set -- -a -x -b 'hello dollie' -- 'molie jolie'
echo


echo 'Unsetting OPTIND'
unset OPTIND
echo


echo 'Correct usage can be done with a while'
echo 'getops returns 0 until there are no more params to read'
echo
while getopts $optstring option; do
	case $option in
 		a)
			echo 'while: The current option is set in $option'
			echo "while: \$option:$option"
			echo
			;;
		[bc])
			echo 'while: Options with argument use also OPTARG'
			echo "while: \$option:$option \$OPTARG:$OPTARG"
			echo
			;;
		?)
			echo 'while: Invalid options are reported with ?'
			echo "while: \$option:$option"
			echo
			;;
	esac
done
echo


echo 'Afterwards OPTIND is set to the next available parameter, skipping --'
echo "\$OPTIND: $OPTIND"
echo 

echo 'So shifting up to it, minus one, leaves the rest ready'
shift $(( OPTIND - 1 ));
./printParams "$@"
echo


echo 'If optstring starts with a colon ":"'
echo 'getopts will mute errors but provide information about them'


echo 'Using:'
echo "-a -x -b 'hello dollie' -c"
set -- -a -x -b 'hello dollie' -c
echo


echo 'Unsetting OPTIND'
unset OPTIND
echo


while getopts ":$optstring" option; do
	case $option in
 		a)
			echo 'while: The current option is set in $option'
			echo "while: \$option:$option"
			echo
			;;
		[bc])
			echo 'while: Options with argument use also OPTARG'
			echo "while: \$option:$option \$OPTARG:$OPTARG"
			echo
			;;
		:)
			echo 'while: Options with missing argument are reported with ":"'
			echo 'while: the incorrect option is present in OPTARG'
			echo "while: \$option:$option \$OPTARG:$OPTARG"
			echo
			;;
		?)
			echo 'while: Invalid options are reported with "?"'
			echo 'while: the invalid option is present in OPTARG'
			echo "while: \$option:$option \$OPTARG:$OPTARG"
			echo
			;;
	esac
done
echo


echo 'OPTIND is still advanced as expected'
echo "\$OPTIND: $OPTIND"
echo 


